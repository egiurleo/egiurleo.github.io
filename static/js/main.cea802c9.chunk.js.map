{"version":3,"sources":["data.js","Title.js","About.js","Projects.js","App.js","serviceWorker.js","index.js"],"names":["data","featured","Title","className","social","map","key","name","href","link","alt","target","rel","About","dangerouslySetInnerHTML","__html","about","Projects","projects","project","title","year","description","renderProject","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uNA6DeA,G,KAvDF,CACX,OAAU,CACR,CACE,KAAQ,SACR,KAAQ,+BAEV,CACE,KAAQ,UACR,KAAQ,oCAEV,CACE,KAAQ,SACR,KAAQ,2BAEV,CACE,KAAQ,WACR,KAAQ,qCAGZ,MAAS,8cACT,SAAY,CACV,CACE,MAAS,gCACT,KAAQ,8BACR,KAAQ,KACR,YAAe,kxBACfC,UAAU,GAEZ,CACE,MAAS,iBACT,KAAQ,kDACR,KAAQ,KACR,YAAe,2IAEjB,CACE,MAAS,qBACT,KAAQ,wEACR,KAAQ,KACR,YAAe,kMAEjB,CACE,MAAS,8BACT,KAAQ,oDACR,KAAQ,KACR,YAAe,sFAEjB,CACE,MAAS,wCACT,KAAQ,oEACR,KAAQ,KACR,YAAe,4J,KCrCNC,MAff,WACE,OACE,yBAAKC,UAAU,SACb,6CACA,yBAAKA,UAAU,UACVH,EAAKI,OAAOC,KAAI,SAAAD,GAAM,OACrB,uBAAGE,IAAG,iBAAYF,EAAOG,MAAQC,KAAMJ,EAAOK,KAAMC,IAAKN,EAAOG,KAAMI,OAAO,SAASC,IAAI,uBACvFR,EAAOG,YCCPM,MARf,WACE,OACE,yBAAKV,UAAU,SACb,uBAAGW,wBAAyB,CAAEC,OAAQf,EAAKgB,WC2BlCC,MA9Bf,WAiBE,OACE,yBAAKd,UAAU,YACb,wCAEGH,EAAKkB,SACHb,KAAI,SAAAc,GAAO,OArBA,SAAAA,GAClB,OACE,yBAAKhB,UAAU,WACb,yBAAKA,UAAU,iBACb,4BACE,uBAAGK,KAAMW,EAAQV,KAAME,OAAO,SAASC,IAAI,uBACxCO,EAAQC,OAEX,0BAAMjB,UAAU,QAAhB,IAAyBgB,EAAQE,KAAjC,OAGJ,uBAAGlB,UAAU,cAAcW,wBAAyB,CAAEC,OAAQI,EAAQG,gBAWlEC,CAAcJ,QCXXK,MAVf,WACE,OACE,yBAAKrB,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCCcsB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.cea802c9.chunk.js","sourcesContent":["import React from 'react';\n// import Github from './icons/Github';\n// import Twitter from './icons/Twitter';\n// import LinkedIn from './icons/LinkedIn';\n// import DevTo from './icons/DevTo';\n\nconst data = {\n  \"social\": [\n    {\n      \"name\": \"github\",\n      \"link\": \"https://github.com/egiurleo\",\n    },\n    {\n      \"name\": \"twitter\",\n      \"link\": \"https://twitter.com/EmilyGiurleo\",\n    },\n    {\n      \"name\": \"dev.to\",\n      \"link\": \"https://dev.to/egiurleo\",\n    },\n    {\n      \"name\": \"linkedin\",\n      \"link\": \"https://linkedin.com/in/egiurleo\",\n    },\n  ],\n  \"about\": \"I'm a software engineer at MongoDB working on the <a href=\\\"https://github.com/mongodb/mongo-ruby-driver\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">Ruby driver</a> and <a href=\\\"https://github.com/mongodb/mongoid\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">Mongoid ODM</a>. I have previously worked at <a href=\\\"https://codecademy.com\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">Codecademy</a>. I care a lot about accessible education, civic engagement, and cats.\",\n  \"projects\": [\n    {\n      \"title\": \"FreeFrom Compensation Compass\",\n      \"link\": \"https://compas.freefrom.org\",\n      \"year\": 2019,\n      \"description\": \"<a href=\\\"https://freefrom.org\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">FreeFrom</a> is an organization that helps survivors of gender-based violence achieve financial security. As a volunteer with <a href=\\\"https://ragtag.org\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">Ragtag</a>, I built a Rails API backend for their new compensation tool, which helps survivors of gender-based violence in all 50 states learn what forms of financial compensation that are available to them. I also built a CMS with <a href=\\\"https://github.com/heartcombo/devise\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">devise</a> and <a href=\\\"https://github.com/thoughtbot/administrate\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">administrate</a> that allows the FreeFrom staff to update and maintain their site.\",\n      featured: true,\n    },\n    {\n      \"title\": \"Advent of Code\",\n      \"link\": \"https://github.com/egiurleo/advent-of-code-2019\",\n      \"year\": 2019,\n      \"description\": \"My solutions to <a href=\\\"https://adventofcode.com/\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">Advent of Code 2019</a>, written in Ruby.\"\n    },\n    {\n      \"title\": \"Codecademy Go Cast\",\n      \"link\": \"https://podcasts.apple.com/us/podcast/codecademy-go-cast/id1450421834\",\n      \"year\": 2019,\n      \"description\": \"A podcast I hosted with an excellent coworker from Codecademy, <a href=\\\"https://jonsamp.dev\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">Jon Samp</a>, about creating the Codecademy mobile app.\"\n    },\n    {\n      \"title\": \"The Stable Meow-age Problem\",\n      \"link\": \"https://glitch.com/edit/#!/stable-meowage-problem\",\n      \"year\": 2018,\n      \"description\": \"A high school workshop on the Stable Marriage Problem algorithm... featuring cats!\"\n    },\n    {\n      \"title\": \"Keyboard Interactions in App Inventor\",\n      \"link\": \"https://drive.google.com/file/d/0B8AUNoeCnCCASzUwMWtwWUhmN1E/view\",\n      \"year\": 2017,\n      \"description\": \"A paper I wrote as part of my undergraduate thesis about implementing keyboard interactions in App Inventor, a block-based Android app building tool.\"\n    },\n  ]\n}\n\nexport default data;\n","import React from 'react';\nimport data from './data';\nimport './App.css';\n\nfunction Title() {\n  return(\n    <div className=\"title\">\n      <h1>Emily Giurleo</h1>\n      <div className=\"social\">\n          {data.social.map(social => (\n            <a key={`social-${social.name}`} href={social.link} alt={social.name} target=\"_blank\" rel=\"noopener noreferrer\">\n              {social.name}\n            </a>\n          ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Title;\n","import React from 'react';\nimport data from './data';\nimport './App.css';\n\nfunction About() {\n  return(\n    <div className=\"about\">\n      <p dangerouslySetInnerHTML={{ __html: data.about}}></p>\n    </div>\n  );\n}\n\nexport default About;\n","import React from 'react';\nimport data from './data';\nimport './App.css';\n\nfunction Projects() {\n  var renderProject = project => {\n    return(\n      <div className=\"project\">\n        <div className=\"project-title\">\n          <h3>\n            <a href={project.link} target=\"_blank\" rel=\"noopener noreferrer\">\n              {project.title}\n            </a>\n            <span className=\"year\">({project.year})</span>\n          </h3>\n        </div>\n        <p className=\"description\" dangerouslySetInnerHTML={{ __html: project.description}}></p>\n      </div>\n    )\n  }\n\n  return(\n    <div className=\"projects\">\n      <h2>Projects</h2>\n\n        {data.projects\n          .map(project => (\n            renderProject(project)\n          )\n        )}\n    </div>\n  );\n}\n\nexport default Projects;\n","import React from 'react';\nimport Title from './Title';\nimport About from './About';\nimport Projects from './Projects';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Title />\n      <About />\n      <Projects />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}